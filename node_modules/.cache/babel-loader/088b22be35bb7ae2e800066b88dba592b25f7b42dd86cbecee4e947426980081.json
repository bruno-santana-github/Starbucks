{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\GitHub_Projects\\\\Starbucks-main\\\\src\\\\pages\\\\CompleteOrder\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { CompleteOrderForm } from \"./../../components/componentsCompleteOrder/CompleteOrderForm\";\nimport { SelectedCoffees } from \"./../../components/componentsCompleteOrder/SelectedCoffees\";\nimport { CompleteOrderContainer } from \"./styles\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport * as zod from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCart } from \"../../hooks/useCart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PaymentMethods;\n(function (PaymentMethods) {\n  PaymentMethods[\"credit\"] = \"credit\";\n  PaymentMethods[\"debit\"] = \"debit\";\n  PaymentMethods[\"money\"] = \"money\";\n})(PaymentMethods || (PaymentMethods = {}));\nconst confirmOrderFormValidationSchema = zod.object({\n  cep: zod.string().min(1, \"Informe o CEP\"),\n  street: zod.string().min(1, \"Informe o Rua\"),\n  number: zod.string().min(1, \"Informe o Número\"),\n  complement: zod.string(),\n  district: zod.string().min(1, \"Informe o Bairro\"),\n  city: zod.string().min(1, \"Informe a Cidade\"),\n  uf: zod.string().min(1, \"Informe a UF\"),\n  paymentMethod: zod.nativeEnum(PaymentMethods, {\n    errorMap: () => {\n      return {\n        message: \"Informe o método de pagamento\"\n      };\n    }\n  })\n});\nexport function CompleteOrderPage() {\n  _s();\n  const confirmOrderForm = useForm({\n    resolver: zodResolver(confirmOrderFormValidationSchema),\n    defaultValues: {\n      paymentMethod: undefined\n    }\n  });\n  const {\n    handleSubmit\n  } = confirmOrderForm;\n  const navigate = useNavigate();\n  const {\n    cleanCart\n  } = useCart();\n  function handleConfirmOrder(data) {\n    navigate(\"/orderConfirmed\", {\n      state: data\n    });\n    cleanCart();\n  }\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    ...confirmOrderForm,\n    children: /*#__PURE__*/_jsxDEV(CompleteOrderContainer, {\n      className: \"container\",\n      onSubmit: handleSubmit(handleConfirmOrder),\n      children: [/*#__PURE__*/_jsxDEV(CompleteOrderForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectedCoffees, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(CompleteOrderPage, \"uFlRzmfuUXv9iltszGz9pT2xBLs=\", false, function () {\n  return [useForm, useNavigate, useCart];\n});\n_c = CompleteOrderPage;\nvar _c;\n$RefreshReg$(_c, \"CompleteOrderPage\");","map":{"version":3,"names":["CompleteOrderForm","SelectedCoffees","CompleteOrderContainer","useForm","FormProvider","zod","zodResolver","useNavigate","useCart","PaymentMethods","confirmOrderFormValidationSchema","object","cep","string","min","street","number","complement","district","city","uf","paymentMethod","nativeEnum","errorMap","message","CompleteOrderPage","confirmOrderForm","resolver","defaultValues","undefined","handleSubmit","navigate","cleanCart","handleConfirmOrder","data","state"],"sources":["C:/xampp/htdocs/GitHub_Projects/Starbucks-main/src/pages/CompleteOrder/index.tsx"],"sourcesContent":["import { CompleteOrderForm } from \"./../../components/componentsCompleteOrder/CompleteOrderForm\";\nimport { SelectedCoffees } from \"./../../components/componentsCompleteOrder/SelectedCoffees\";\nimport { CompleteOrderContainer } from \"./styles\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport * as zod from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCart } from \"../../hooks/useCart\";\n\nenum PaymentMethods {\n  credit = \"credit\",\n  debit = \"debit\",\n  money = \"money\",\n}\n\nconst confirmOrderFormValidationSchema = zod.object({\n  cep: zod.string().min(1, \"Informe o CEP\"),\n  street: zod.string().min(1, \"Informe o Rua\"),\n  number: zod.string().min(1, \"Informe o Número\"),\n  complement: zod.string(),\n  district: zod.string().min(1, \"Informe o Bairro\"),\n  city: zod.string().min(1, \"Informe a Cidade\"),\n  uf: zod.string().min(1, \"Informe a UF\"),\n  paymentMethod: zod.nativeEnum(PaymentMethods, {\n    errorMap: () => {\n      return { message: \"Informe o método de pagamento\" };\n    },\n  }),\n});\n\nexport type OrderData = zod.infer<typeof confirmOrderFormValidationSchema>;\n\ntype ConfirmOrderFormData = OrderData;\n\nexport function CompleteOrderPage() {\n  const confirmOrderForm = useForm<ConfirmOrderFormData>({\n    resolver: zodResolver(confirmOrderFormValidationSchema),\n    defaultValues: {\n      paymentMethod: undefined,\n    },\n  });\n\n  const { handleSubmit } = confirmOrderForm;\n\n  const navigate = useNavigate();\n  const { cleanCart } = useCart();\n\n  function handleConfirmOrder(data: ConfirmOrderFormData) {\n    navigate(\"/orderConfirmed\", {\n      state: data,\n    });\n    cleanCart();\n  }\n\n  return (\n    <FormProvider {...confirmOrderForm}>\n      <CompleteOrderContainer\n        className=\"container\"\n        onSubmit={handleSubmit(handleConfirmOrder)}\n      >\n        <CompleteOrderForm />\n        <SelectedCoffees />\n      </CompleteOrderContainer>\n    </FormProvider>\n  );\n}\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,8DAA8D;AAChG,SAASC,eAAe,QAAQ,4DAA4D;AAC5F,SAASC,sBAAsB,QAAQ,UAAU;AACjD,SAASC,OAAO,EAAEC,YAAY,QAAQ,iBAAiB;AACvD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,qBAAqB;AAAC;AAAA,IAEzCC,cAAc;AAAA,WAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;AAAA,GAAdA,cAAc,KAAdA,cAAc;AAMnB,MAAMC,gCAAgC,GAAGL,GAAG,CAACM,MAAM,CAAC;EAClDC,GAAG,EAAEP,GAAG,CAACQ,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,eAAe,CAAC;EACzCC,MAAM,EAAEV,GAAG,CAACQ,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,eAAe,CAAC;EAC5CE,MAAM,EAAEX,GAAG,CAACQ,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,kBAAkB,CAAC;EAC/CG,UAAU,EAAEZ,GAAG,CAACQ,MAAM,EAAE;EACxBK,QAAQ,EAAEb,GAAG,CAACQ,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,kBAAkB,CAAC;EACjDK,IAAI,EAAEd,GAAG,CAACQ,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,kBAAkB,CAAC;EAC7CM,EAAE,EAAEf,GAAG,CAACQ,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC;EACvCO,aAAa,EAAEhB,GAAG,CAACiB,UAAU,CAACb,cAAc,EAAE;IAC5Cc,QAAQ,EAAE,MAAM;MACd,OAAO;QAAEC,OAAO,EAAE;MAAgC,CAAC;IACrD;EACF,CAAC;AACH,CAAC,CAAC;AAMF,OAAO,SAASC,iBAAiB,GAAG;EAAA;EAClC,MAAMC,gBAAgB,GAAGvB,OAAO,CAAuB;IACrDwB,QAAQ,EAAErB,WAAW,CAACI,gCAAgC,CAAC;IACvDkB,aAAa,EAAE;MACbP,aAAa,EAAEQ;IACjB;EACF,CAAC,CAAC;EAEF,MAAM;IAAEC;EAAa,CAAC,GAAGJ,gBAAgB;EAEzC,MAAMK,QAAQ,GAAGxB,WAAW,EAAE;EAC9B,MAAM;IAAEyB;EAAU,CAAC,GAAGxB,OAAO,EAAE;EAE/B,SAASyB,kBAAkB,CAACC,IAA0B,EAAE;IACtDH,QAAQ,CAAC,iBAAiB,EAAE;MAC1BI,KAAK,EAAED;IACT,CAAC,CAAC;IACFF,SAAS,EAAE;EACb;EAEA,oBACE,QAAC,YAAY;IAAA,GAAKN,gBAAgB;IAAA,uBAChC,QAAC,sBAAsB;MACrB,SAAS,EAAC,WAAW;MACrB,QAAQ,EAAEI,YAAY,CAACG,kBAAkB,CAAE;MAAA,wBAE3C,QAAC,iBAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eACrB,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACZ;AAEnB;AAAC,GA/BeR,iBAAiB;EAAA,QACNtB,OAAO,EASfI,WAAW,EACNC,OAAO;AAAA;AAAA,KAXfiB,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}